{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplatName","getMyNweets","a","collection","where","uid","orderBy","get","nweets","console","log","docs","map","doc","data","onSubmit","e","preventDefault","updateProfile","useEffect","onChange","value","target","type","placeholder","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAcount","setNewAcount","error","setError","event","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","width","height","NweetFactroy","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createAt","Date","now","creatorId","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","setNweets","onSnapshot","snapshot","nweetArray","Navigation","to","length","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f75ca8a0.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\n// Initialize Firebase \nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore(); \nexport const storageService = firebase.storage();","import { authService, dbService } from 'fbase';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplatName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n    const getMyNweets = async() => {\n        const nweets = await dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createAt\", \"asc\")\n            .get();\n        console.log(nweets.docs.map(doc => doc.data()));\n    };\n    const onChange = (e) => {\n        const {target: {value}} = e;\n        setNewDisplatName(value);\n    }\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if(userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName,\n            });\n            refreshUser();\n        }\n    }\n    useEffect(() => {\n        getMyNweets();\n    },[])\n    return (\n        <>\n        <form onSubmit={onSubmit}>\n            <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName} />\n            <input type=\"submit\" value=\"Update Profile\" />\n        </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    );\n}","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAcount, setNewAcount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {target: {name, value}} = event;\n        if(name === \"email\"){\n            setEmail(value);\n        }else if(name === \"password\"){\n            setPassword(value);\n        }\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try{\n            let data;\n            if(newAcount){\n                //create account\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            }else {\n                // log in\n                data = await authService.signInWithEmailAndPassword(email, password);\n            };\n            console.log(data);\n        }catch(error){\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAcount(prev => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\n                <input name=\"password\" type=\"password\" placeholder=\"password\" required value={password} onChange={onChange} />\n                <input type=\"submit\" value={newAcount ? \"Create Account\" : \"Log In\"} />\n                {error}\n            </form>\n            <span onClick={toggleAccount}>{newAcount ? \"Sign in\" : \"Create Account\"}</span>\n        </>\n    )\n}\n\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\nimport { authService, firebaseInstance } from 'fbase';\nimport React, { useState } from 'react';\n\nconst Auth = () => {\n    const onSocialClick = async (e) => {\n        const {target:{name}} = e;\n        let provider;\n        if(name === 'google'){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }else if(name === 'github'){\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n        console.log(data)\n    }\n\n    return (\n        <div>\n            <AuthForm />\n            <div>\n                <button name=\"google\" onClick={onSocialClick}>Continue with Google</button>\n                <button name=\"github\" onClick={onSocialClick}>Continue with github</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async() => {\n        const ok = window.confirm(\"Are you sure you want to delet this nweet?\");\n        if(ok){\n            //delete nweet\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () => setEditing(prev => !prev);\n    const onSubmit = async(e) => {\n        e.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet\n        });\n        setEditing(false);\n    }\n    const onChange = (e) => {\n        const {target:{value}} = e;\n        setNewNweet(value);\n    }\n    return (\n        <div>\n            {\n                editing\n                    ?\n                    <>\n                        <form onSubmit={onSubmit}>\n                            <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} required onChange={onChange} />\n                        </form>\n                        <input type=\"submit\" value=\"update Nweet\" onClick={onSubmit} />\n                        <button onClick={toggleEditing}>Cancel</button>\n                    </>\n                    : <>\n                        <h4>{nweetObj.text}</h4>\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />}\n                        {isOwner && (\n                            <>\n                                <button onClick={onDeleteClick}>Delet Nweet</button>\n                                <button onClick={toggleEditing}>Edit Nweet</button>\n                            </>\n                        )}\n                    </>\n            }\n        </div>\n    )\n};\n\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\nimport {v4 as uuidv4} from \"uuid\";\nimport React, { useState } from \"react\";\n\nconst NweetFactroy = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment !== \"\"){\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (e) => {\n        const {target:{value}} = e;\n        setNweet(value);\n    };\n    const onFileChange = (e) => {\n        const {target:{files}} = e;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result}} = finishedEvent\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n            <input type=\"submit\" value=\"enter\" />\n            {attachment && <div>\n                <img src={attachment} width=\"50px\" height=\"50px\" />\n                <button onClick={onClearAttachment}>Clear</button>\n            </div>}\n        </form>\n    )\n};\n\nexport default NweetFactroy;","import { dbService, storageService } from 'fbase';\nimport React, { useEffect, useState } from 'react';\nimport Nweet from \"../components/Nweet\";\nimport NweetFactroy from 'components/NweetFactory';\n\nconst Home = ({userObj}) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(()=>{\n        dbService.collection(\"nweets\").onSnapshot(snapshot => {\n            const nweetArray = snapshot.docs.map(doc => ({id:doc.id, ...doc.data()}));\n            setNweets(nweetArray);\n        })\n    }, []);\n    return(\n        <div>\n            <NweetFactroy userObj={userObj} />\n            <div>\n                {nweets.map(nweet => (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n        </div>\n    )\n};\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = ({userObj}) => (\n    <nav>\n        <ul>\n            <li>\n                <Link to = \"/\">Home</Link>\n            </li>\n            <li>\n                <Link to = \"/profile\">{userObj?.displayName?.length\n                ? `${userObj.displayName}'s Profile`\n                : \"Profile\"}</Link>\n            </li>\n        </ul>\n    </nav>\n);\nexport default Navigation;","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Profile from 'routes/Profile';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation';\n\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />} \n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                    </>\n                ):(\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth />\n                        </Route>\n                    </>\n                )\n                }\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport {authService} from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }else {\n        setIsLoggedIn(false);\n        setUserObj(\"\");\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj = {userObj} /> : \"Initializing...\"}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n/*import fbase from 'fbase';\nconsole.log(fbase);*/\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}